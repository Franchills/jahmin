{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Album.svelte",
    "CoverArt.svelte",
    "PlayButton.svelte",
    "PlayerProgress.svelte",
    "PlayerVolumeBar.svelte",
    "SongListItem.svelte",
    "Star.svelte",
    "TagEdit-Editor.svelte",
    "TagEdit-Separator.svelte",
    "ArtGrid.svelte",
    "BackgroundArt.svelte",
    "Grouping.svelte",
    "Navigation.svelte",
    "Player.svelte",
    "SongList.svelte",
    "SongListBackground.svelte",
    "TagEdit.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import Navigation from './includes/Navigation.svelte';\nimport ArtGrid from './includes/ArtGrid.svelte';\nimport Grouping from './includes/Grouping.svelte';\nimport Player from './includes/Player.svelte';\nimport SongList from './includes/SongList.svelte';\nimport TagEdit from './includes/TagEdit.svelte';\nimport ConfigController from './controllers/ConfigController.svelte';\nimport PlayerController from './controllers/PlayerController.svelte';\nimport BackgroundArt from './includes/BackgroundArt.svelte';\nimport SongListBackground from './includes/SongListBackground.svelte';\nimport { onMount } from 'svelte';\nimport { getChangesProgressIPC, syncDbVersionIPC } from './service/ipc.service';\nimport { appTitle } from './store/final.store';\nonMount(() => {\n    syncDbVersionIPC();\n    // getNewDbChangesProgress()\n    window.onkeydown = function (e) {\n        return !(e.code == 'Space' && e.target == document.body);\n    };\n    // window.onclick = (evt: MouseEvent) => {\n    // \tlet songListSvelteFound = false\n    // \tevt['path'].forEach((element: HTMLElement) => {\n    // \t\tif (element.tagName === 'SONG-LIST-SVLT') {\n    // \t\t\tsongListSvelteFound = true\n    // \t\t}\n    // \t})\n    // \tif (songListSvelteFound === false) {\n    // \t\t$selectedSongs = []\n    // \t\tsongListSvelteFound = false\n    // \t}\n    // }\n});\nfunction getNewDbChangesProgress() {\n    getChangesProgressIPC().then((result) => {\n        console.log((100 / result['total']) * result['current'], '% Total:', result['total'], ' Current:', result['current']);\n        setTimeout(() => {\n            getNewDbChangesProgress();\n        }, 10000);\n    });\n}\n</script>\n\n<svelte:head>\n\t<title>{$appTitle}</title>\n</svelte:head>\n\n<PlayerController />\n<ConfigController />\n\n<main>\n\t<Navigation />\n\t<ArtGrid />\n\t<Grouping />\n\t<Player />\n\t<SongList />\n\t<TagEdit />\n\t<BackgroundArt />\n\t<SongListBackground />\n</main>\n\n<style>\n\tmain {\n\t\theight: 100%;\n\t\toverflow-y: hidden;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 64px auto 8fr 256px;\n\t\tgrid-template-rows: 2fr 1fr 64px;\n\t\tgrid-template-areas:\n\t\t\t'navigation-svlt grouping-svlt art-grid-svlt tag-edit-svlt'\n\t\t\t'navigation-svlt grouping-svlt song-list-svlt tag-edit-svlt'\n\t\t\t'navigation-svlt grouping-svlt player-svlt tag-edit-svlt';\n\t}\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from 'svelte';\nimport { getCoverIPC } from '../service/ipc.service';\nimport { setNewPlayback } from '../functions/setNewPlayback.fn';\n;\nimport { scrollSongListToTop } from '../functions/scrollSongListToTop.fn';\nimport { albumPlayingIdStore, selectedAlbumId } from '../store/final.store';\nimport CoverArt from './CoverArt.svelte';\nexport let album;\nexport let index;\nlet coverType = undefined;\nlet coverSrc = undefined; /* Image Source URL */\nonMount(() => {\n    let lastPlayedAlbumID = localStorage.getItem('LastPlayedAlbumID');\n    if (album.ID === lastPlayedAlbumID) {\n        let albumEl = document.querySelector(`#${CSS.escape(album.ID)}`);\n        if (albumEl) {\n            albumEl.scrollIntoView({ block: 'center' });\n        }\n    }\n});\nfunction selectLastPlayedSong() {\n    album['Songs'] = album['Songs'].sort((a, b) => a['Track'] - b['Track']);\n    // $selectedAlbumId = album\n    let lastPlayedSong = album['Songs'].find((i) => i['ID'] === Number(localStorage.getItem('LastPlayedSongID')));\n    if (lastPlayedSong) {\n        let lastPlayedSongID = lastPlayedSong['ID'];\n        if (lastPlayedSongID) {\n            setTimeout(() => {\n                let $song = document.querySelector(`#${CSS.escape(String(lastPlayedSongID))}`);\n                if ($song) {\n                    $song.scrollIntoView({ block: 'center' });\n                }\n            }, 100);\n        }\n    }\n}\n// function fetchAlbumCover() {\n// \tgetCoverIPC(album['RootDir']).then((result) => {\n// \t\tif (result !== null) {\n// \t\t\tcoverSrc = result['filePath']\n// \t\t\tcoverType = result['fileType']\n// \t\t} else {\n// \t\t\tcoverType = 'not found'\n// \t\t}\n// \t})\n// }\n// function addIntersectionObserver() {\n// \tnew IntersectionObserver(\n// \t\t(entries) => {\n// \t\t\tif (entries[0].isIntersecting === true && coverSrc === undefined) {\n// \t\t\t\tfetchAlbumCover()\n// \t\t\t}\n// \t\t},\n// \t\t{ root: document.querySelector(`art-grid-svlt`), threshold: 0, rootMargin: '0px 0px 50% 0px' }\n// \t).observe(document.querySelector(`art-grid-svlt > #${CSS.escape(album['ID'])}`))\n// }\n// On Album Click/Double Click\nfunction prepareAlbum(evt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        scrollSongListToTop();\n        // Song Sorting\n        album['Songs'] = album['Songs'].sort((a, b) => a['Track'] - b['Track']);\n        // $selectedAlbumId = album\n        if (evt['type'] === 'dblclick') {\n            // setNewPlayback(album['ID'], 0, true)\n        }\n    });\n}\n/*\non:dblclick={(evt) => prepareAlbum(evt)}\non:click={(evt) => prepareAlbum(evt)}\n*/\n</script>\n\n<album id={album.ID} class={$selectedAlbumId === album?.ID ? 'selected' : ''}>\n\t<CoverArt rootDir={album.RootDir} albumId={album.ID} />\n\n\t<overlay-gradient />\n\n\t<album-details>\n\t\t<album-name>{album['Name']}</album-name>\n\n\t\t{#if album['AlbumArtist'] !== undefined}\n\t\t\t<album-artist>{album['AlbumArtist']}</album-artist>\n\t\t{:else if album['DynamicAlbumArtist'] !== undefined}\n\t\t\t<album-artist>{album['DynamicAlbumArtist']}</album-artist>\n\t\t{:else}\n\t\t\t<album-artist />\n\t\t{/if}\n\t</album-details>\n</album>\n\n<style>\n\talbum.selected {\n\t\tbox-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5), 0 0 0 7.5px rgba(255, 255, 255, 0.5);\n\t}\n\n\talbum {\n\t\tposition: relative;\n\t\tdisplay: grid;\n\n\t\tmargin: 1rem;\n\t\tcursor: pointer;\n\t\theight: var(--cover-dimension);\n\t\twidth: var(--cover-dimension);\n\t\tmax-width: var(--cover-dimension);\n\t\tmax-height: var(--cover-dimension);\n\t}\n\n\toverlay-gradient {\n\t\tbackground: linear-gradient(0deg, rgba(0, 0, 0, 0.75) 0%, rgba(0, 0, 0, 0.5) 25%, rgba(0, 0, 0, 0) 50%);\n\t\theight: inherit;\n\t\twidth: inherit;\n\t}\n\n\talbum-details {\n\t\tpadding: 0.5rem 1rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-self: end;\n\t\ttext-align: center;\n\t}\n\n\talbum > * {\n\t\tgrid-column: 1;\n\t\tgrid-row: 1;\n\t}\n\n\talbum-artist {\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\tmax-width: calc(var(--cover-dimension) - 1.5rem);\n\t}\n\n\talbum-name {\n\t\tfont-variation-settings: 'wght' 500;\n\t\twhite-space: normal;\n\t}\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\nimport { getCoverIPC } from '../service/ipc.service';\nimport { albumCoverArtMapStore } from '../store/final.store';\n;\nlet coverType = undefined;\nlet coverSrc = undefined;\nexport let rootDir;\nexport let albumId;\nlet albumCoverArtVersion = undefined;\nlet coverArtObserver;\n$: {\n    const ALBUM_COVER_ART_DATA = $albumCoverArtMapStore.get(albumId);\n    if ((ALBUM_COVER_ART_DATA === null || ALBUM_COVER_ART_DATA === void 0 ? void 0 : ALBUM_COVER_ART_DATA.version) !== albumCoverArtVersion) {\n        setCoverData(ALBUM_COVER_ART_DATA);\n    }\n}\nonMount(() => {\n    addIntersectionObserver();\n});\nfunction addIntersectionObserver() {\n    coverArtObserver = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting === true) {\n            const ALBUM_COVER_ART_DATA = $albumCoverArtMapStore.get(albumId);\n            if (ALBUM_COVER_ART_DATA) {\n                setCoverData(ALBUM_COVER_ART_DATA);\n            }\n            else {\n                getAlbumCover();\n            }\n            // \"Closes\" the Cover Art Observer to avoid unnecessary checks.\n            coverArtObserver.disconnect();\n        }\n    }, { root: document.querySelector(`art-grid-svlt`), threshold: 0, rootMargin: '0px 0px 50% 0px' });\n    coverArtObserver.observe(document.querySelector(`art-grid-svlt > #${CSS.escape(albumId)}`));\n}\nfunction setCoverData(coverData) {\n    albumCoverArtVersion = coverData.version;\n    coverType = coverData.fileType;\n    coverSrc = coverData.filePath;\n}\nfunction getAlbumCover() {\n    getCoverIPC(rootDir).then((response) => {\n        if (response) {\n            $albumCoverArtMapStore.set(albumId, {\n                version: 0,\n                filePath: response.filePath,\n                fileType: response.fileType\n            });\n            $albumCoverArtMapStore = $albumCoverArtMapStore;\n        }\n        else {\n            coverType = 'not found';\n        }\n    });\n}\n</script>\n\n<cover-art>\n\t{#if coverType === undefined}\n\t\t<img src=\"./img/audio.svg\" class=\"loader\" alt=\"\" />\n\t{/if}\n\t{#if coverType === 'not found'}<img src=\"./img/compact-disc.svg\" class=\"notFound\" alt=\"\" />{/if}\n\t{#if coverType === 'image'}<img src={coverSrc} alt=\"\" />{/if}\n\t{#if coverType === 'video'}\n\t\t<video autoplay loop>\n\t\t\t<track kind=\"captions\" />\n\t\t\t<source src={coverSrc} />\n\t\t</video>\n\t{/if}\n</cover-art>\n\n<style>\n\tcover-art {\n\t\tgrid-column: 1;\n\t\tgrid-row: 1;\n\t\twidth: inherit;\n\t\theight: inherit;\n\t}\n\n\tvideo {\n\t\theight: inherit;\n\t\twidth: inherit;\n\t}\n\n\timg {\n\t\theight: inherit;\n\t\twidth: inherit;\n\t}\n\n\timg.loader {\n\t\tpadding: 5rem;\n\t}\n\n\timg.notFound {\n\t\tborder-width: 10px;\n\t\tborder-color: #fff #ccc #ccc #fff;\n\t\tborder-style: solid;\n\t\tpadding: 2rem;\n\t}\n</style>\n",
    "<script lang=\"ts\">import { isPlaying } from '../store/final.store';\nexport let player;\nfunction togglePlay() {\n    if ($isPlaying) {\n        player.pause();\n    }\n    else {\n        if (player.src !== '') {\n            player.play();\n        }\n    }\n}\n</script>\n\n<play-pause-button class={$isPlaying ? '' : 'playing'} on:click={() => togglePlay()}>\n\t<left-part />\n\n\t<right-part />\n</play-pause-button>\n\n<style>\n\tplay-pause-button {\n\t\tposition: relative;\n\t\tdisplay: block;\n\t\theight: var(--button-size);\n\t\twidth: var(--button-size);\n\t\tbackground-color: transparent;\n\t}\n\n\tplay-pause-button > * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tdisplay: block;\n\t\tbackground-color: var(--low-color);\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttransition: background-color 300ms ease-in-out, clip-path 500ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\t}\n\n\tplay-pause-button.playing left-part {\n\t\tclip-path: polygon(0 0, 50.5% 25.25%, 50.5% 74.75%, 0% 100%);\n\t}\n\n\tplay-pause-button.playing right-part {\n\t\tclip-path: polygon(49.5% 24.75%, 100% 50%, 100% 50%, 49.5% 75.25%);\n\t}\n\n\tleft-part {\n\t\tclip-path: polygon(0 0, 33% 0, 33% 100%, 0% 100%);\n\t}\n\n\tright-part {\n\t\tclip-path: polygon(66% 0, 100% 0, 100% 100%, 66% 100%);\n\t}\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from 'svelte';\nimport { getWaveformIPC } from '../service/ipc.service';\nimport { playbackCursor, playbackStore } from '../store/final.store';\n;\nexport let player;\nexport let song;\nlet pauseDebounce = undefined;\nlet isMouseDown = false;\nlet isMouseIn = false;\nlet progressBackgroundEl = undefined;\nlet isPlaybackCursorFirstAssign = true;\n$: {\n    if (isPlaybackCursorFirstAssign === true) {\n        isPlaybackCursorFirstAssign = false;\n    }\n    else {\n        $playbackCursor;\n        getWaveformImage($playbackCursor[0]);\n    }\n}\nfunction getWaveformImage(index) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let song = $playbackStore === null || $playbackStore === void 0 ? void 0 : $playbackStore[index];\n        // Fade Out\n        progressBackgroundEl.style.opacity = '0';\n        getWaveformIPC(song.SourceFile).then((waveformUrl) => {\n            let currentSongPlaying = $playbackStore[$playbackCursor[0]];\n            /* If the song and the actual playing song ID match, it shows the waveform.\n                Prevents multiple waveforms to be shown back to back and makes sure the proper waveform is for the proper playing song.*/\n            if (currentSongPlaying.ID === song.ID) {\n                // Timeout used to Fade In AFTER the css Fade Out\n                setTimeout(() => {\n                    progressBackgroundEl.src = waveformUrl;\n                    progressBackgroundEl.style.opacity = '1';\n                }, 250);\n            }\n        });\n    });\n}\nonMount(() => {\n    hookPlayerProgressEvents();\n    progressBackgroundEl = document.querySelector('img#waveform-image');\n});\nfunction hookPlayerProgressEvents() {\n    let playerProgress = document.querySelector('player-progress');\n    let playerForeground = document.querySelector('player-progress progress-foreground');\n    playerProgress.addEventListener('mouseenter', () => (isMouseIn = true));\n    playerProgress.addEventListener('mouseleave', () => (isMouseIn = false));\n    playerProgress.addEventListener('mousedown', () => (isMouseDown = true));\n    playerProgress.addEventListener('mouseup', () => (isMouseDown = false));\n    playerProgress.addEventListener('mousemove', (evt) => {\n        if (isMouseDown && isMouseIn)\n            applyProgressChange(evt);\n    });\n    playerProgress.addEventListener('click', (evt) => applyProgressChange(evt));\n    function applyProgressChange(evt) {\n        player.pause();\n        playerForeground.classList.add('not-smooth');\n        let playerWidth = playerProgress['scrollWidth'];\n        let selectedPercent = Math.ceil((100 / playerWidth) * evt['offsetX']);\n        document.documentElement.style.setProperty('--song-time', `${selectedPercent}%`);\n        clearTimeout(pauseDebounce);\n        pauseDebounce = setTimeout(() => {\n            player.currentTime = song['Duration'] / (100 / selectedPercent);\n            playerForeground.classList.remove('not-smooth');\n            player.play();\n        }, 500);\n    }\n}\n</script>\n\n<player-progress>\n\t<progress-foreground />\n\t<img id=\"waveform-image\" src=\"\" alt=\"\" />\n</player-progress>\n\n<style>\n\tplayer-progress {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 64px;\n\t}\n\n\tplayer-progress > * {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tdisplay: block;\n\t\theight: 64px;\n\t}\n\n\tplayer-progress progress-foreground {\n\t\tz-index: 1;\n\t\tmix-blend-mode: soft-light;\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\t/* mix-blend-mode: hard-light;\n\t\tbackground-color: var(--high-color); */\n\t\tmin-width: var(--song-time);\n\t\ttransition: min-width 100ms linear;\n\t}\n\n\tplayer-progress #waveform-image {\n\t\tz-index: 0;\n\t\twidth: 100%;\n\t\topacity: 0;\n\t\t/* opacity: 1; */\n\t\ttransition: opacity 250ms linear;\n\t}\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\nlet volume = 0;\nexport let player;\nlet isShiftKeyDown = false;\nlet isPlayerLoaded = false;\nlet saveVolumeDebounce = undefined;\n$: {\n    if (player && isPlayerLoaded === false) {\n        isPlayerLoaded = true;\n        loadLocalStorageVolume();\n    }\n}\n$: {\n    volume;\n    if (isPlayerLoaded === true) {\n        volumeChange();\n    }\n}\nonMount(() => { });\nfunction volumeChange() {\n    player.volume = volume / 100;\n    let volumeBarWidth = document.querySelector('volume-bar').clientWidth;\n    let volumeThumbWidth = document.querySelector('volume-bar volume-thumb').clientWidth;\n    document.documentElement.style.setProperty('--volume-level', `${(volumeBarWidth - volumeThumbWidth) * (volume / 100)}px`);\n    clearTimeout(saveVolumeDebounce);\n    saveVolumeDebounce = setTimeout(() => {\n        localStorage.setItem('volume', String(volume));\n    }, 1000);\n}\nfunction loadLocalStorageVolume() {\n    volume = Number(localStorage.getItem('volume') || NaN);\n    if (volume === undefined || isNaN(volume) || volume > 100) {\n        volume = 25;\n        localStorage.setItem('volume', String(volume));\n    }\n    player.volume = volume / 100;\n    volumeChange();\n}\n</script>\n\n<volume-bar>\n\t<input\n\t\ton:keydown={(evt) => {\n\t\t\tif (evt['key'] === 'Shift') isShiftKeyDown = true\n\t\t}}\n\t\ton:keyup={() => (isShiftKeyDown = false)}\n\t\ttype=\"range\"\n\t\tmin=\"0\"\n\t\tmax=\"100\"\n\t\tstep={isShiftKeyDown ? '5' : '1'}\n\t\tbind:value={volume}\n\t/>\n\t<background />\n\t<volume-thumb>{Math.round(volume)}</volume-thumb>\n</volume-bar>\n\n<style>\n\tvolume-bar {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 100%;\n\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 32px;\n\t}\n\n\tinput {\n\t\tdisplay: block;\n\t\tgrid-row: 1;\n\t\tgrid-column: 1;\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\topacity: 0;\n\t}\n\n\tinput:active {\n\t\tcursor: none;\n\t}\n\n\tvolume-thumb {\n\t\tgrid-row: 1;\n\t\tgrid-column: 1;\n\t\ttransform: translateX(var(--volume-level)); /*  Volume Visual Control */\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\theight: 32px;\n\t\twidth: 32px;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 25px;\n\t\tmix-blend-mode: hard-light;\n\n\t\tbox-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.2);\n\t\tcolor: #767676;\n\n\t\tfont-variation-settings: 'wght' 700;\n\t}\n\n\tbackground {\n\t\tgrid-row: 1;\n\t\tgrid-column: 1;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\theight: 16px;\n\t\tbackground: linear-gradient(to right, var(--high-color), var(--low-color));\n\t\tborder-radius: 25px;\n\t\tbox-shadow: inset 0 0 0 2px #fff, inset 0 0 5px 0 rgba(0, 0, 0, 0.2), 0 0 10px 0 rgba(0, 0, 0, 0.2);\n\t}\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\n;\nimport { albumPlayingIdStore, playbackCursor, selectedAlbumId, selectedSongsStore } from '../store/final.store';\nimport Star from './Star.svelte';\nexport let song;\nexport let index;\nfunction parseDuration(duration) {\n    if (duration >= 60 * 60) {\n        return new Date(duration * 1000).toISOString().substr(11, 8);\n    }\n    else {\n        return new Date(duration * 1000).toISOString().substr(14, 5);\n    }\n}\nonMount(() => {\n    let lastPlayedSongId = Number(localStorage.getItem('LastPlayedSongID'));\n    if (lastPlayedSongId === song.ID) {\n        let songEl = document.querySelector(`#${CSS.escape(String(lastPlayedSongId))}`);\n        if (songEl) {\n            songEl.scrollIntoView({ block: 'center' });\n        }\n    }\n});\nfunction setStar(starChangeEvent) {\n    // TODO: Add updater\n    console.log(song.SourceFile, starChangeEvent.detail.starLevel);\n}\n</script>\n\n<song-list-item\n\tid={song.ID}\n\t{index}\n\tclass=\"\n\t{$playbackCursor[0] === index && $selectedAlbumId === $albumPlayingIdStore\n\t\t? 'playing'\n\t\t: ''}\n\t{$selectedSongsStore.includes(song.ID) ? 'selected' : ''}\"\n>\n\t<!-- <song-number>{index}</song-number> -->\n\t<song-number>{song.Track}</song-number>\n\t<!-- <song-number>{song['ID']}</song-number> -->\n\t<song-title>{song.Title}</song-title>\n\t<Star on:starChange={setStar} songRating={song.Rating} />\n\t<song-duration>{parseDuration(song.Duration)}</song-duration>\n</song-list-item>\n\n<style>\n\tsong-list-item {\n\t\tposition: relative;\n\t\tcursor: pointer;\n\n\t\talign-items: center;\n\n\t\tdisplay: grid;\n\t\tgrid-template-columns: max-content auto max-content max-content;\n\t\tgrid-template-rows: auto;\n\n\t\tmargin: 0.25rem 0;\n\t\tpadding: 0.25rem 0.5rem;\n\t\tuser-select: none;\n\n\t\tborder-radius: 5px;\n\n\t\ttransition-property: font-variation-settings, box-shadow, background-color;\n\t\ttransition-duration: 250ms;\n\t\ttransition-timing-function: ease-in-out;\n\t}\n\n\tsong-list-item > * {\n\t\tpadding: 0 0.5rem;\n\t}\n\n\tsong-list-item.playing {\n\t\tfont-variation-settings: 'wght' 600;\n\t\tbox-shadow: inset 0 0px 0 1px rgba(255, 255, 255, 0.5);\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t}\n\tsong-list-item.selected {\n\t\tbackground-color: rgba(255, 255, 255, 0.15);\n\t}\n</style>\n",
    "<script lang=\"ts\">import { createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\nexport let songRating = 0;\nlet starLevel = songRating / 10;\nlet starLevelTemp = starLevel;\nlet starElementWidth = undefined;\nfunction setStarLevel(e) {\n    if (!starElementWidth) {\n        starElementWidth = document.querySelector('img.star').scrollWidth;\n    }\n    let starValue = Math.trunc(((100 / starElementWidth) * e.offsetX) / (100 / 10)) + 1;\n    if (starValue < 1) {\n        starValue = 1;\n    }\n    else if (starValue > 10) {\n        starValue = 10;\n    }\n    starLevel = starValue;\n}\n</script>\n\n<stars on:click={dispatch('starChange', { starLevel: starLevel * 10 })}>\n\t<img\n\t\ton:click={() => {\n\t\t\tstarLevel = 0\n\t\t\tstarLevelTemp = 0\n\t\t}}\n\t\tclass=\"delete-star\"\n\t\tsrc=\"./img/star/star-delete.svg\"\n\t\talt=\"\"\n\t/>\n\t<!--\n\t\tMouseMove -> As the user moves through the stars, sets the proper star level.\n\t\tMouseClick -> If the user clicks a star level, saves it in a temporary star level.\n\t\tMouseLeave -> When the user leaves, sets the star level with the value of the temporary star level.\n\t -->\n\t<img\n\t\tclass=\"star\"\n\t\ton:mouseleave={() => (starLevel = starLevelTemp)}\n\t\ton:click={() => (starLevelTemp = starLevel)}\n\t\ton:mousemove={(e) => setStarLevel(e)}\n\t\tsrc=\"./img/star/star-{starLevel}.svg\"\n\t\talt=\"\"\n\t/>\n</stars>\n\n<style>\n\tstars {\n\t\tdisplay: flex;\n\t}\n\n\tstars:hover img.delete-star {\n\t\topacity: 0.5;\n\t}\n\n\timg.delete-star {\n\t\topacity: 0;\n\t\tmargin-right: 2.5px;\n\n\t\ttransition-property: opacity;\n\t\ttransition-duration: 300ms;\n\t\ttransition-timing-function: ease-in-out;\n\t}\n\n\timg.delete-star:hover {\n\t\topacity: 1 !important;\n\t}\n\n\timg {\n\t\theight: 1rem;\n\t\twidth: auto;\n\t}\n</style>\n",
    "<script lang=\"ts\">import { nanoid } from 'nanoid';\nimport TagEditSeparator from './TagEdit-Separator.svelte';\nexport let value = '';\nexport let type = 'input';\nexport let placeholder = undefined;\nexport let tagName;\nlet id = nanoid(10);\nfunction resizeTextArea(id, type) {\n    let textAreaElement = document.querySelector(`#${CSS.escape(id)}`).querySelector('textarea');\n    if (textAreaElement) {\n        if (type === 'expand') {\n            textAreaElement.style.minHeight = textAreaElement.scrollHeight + 'px';\n        }\n        else if (type === 'collapse') {\n            textAreaElement.style.minHeight = '0px';\n        }\n    }\n}\n</script>\n\n<tag-edit {id}>\n\t<tag-name>{tagName}</tag-name>\n\t{#if type === 'input'}\n\t\t<input type=\"text\" {placeholder} bind:value />\n\t{:else if type === 'number'}\n\t\t<input type=\"number\" {placeholder} bind:value />\n\t{:else if type === 'textarea'}\n\t\t<textarea\n\t\t\trows=\"1\"\n\t\t\tbind:value\n\t\t\ton:mouseleave={() => {\n\t\t\t\tresizeTextArea(id, 'collapse')\n\t\t\t}}\n\t\t\ton:mouseover={() => {\n\t\t\t\tresizeTextArea(id, 'expand')\n\t\t\t}}\n\t\t\ton:input={() => {\n\t\t\t\tresizeTextArea(id, 'expand')\n\t\t\t}}\n\t\t/>\n\t{/if}\n\t<TagEditSeparator />\n</tag-edit>\n\n<style>\n\ttag-edit {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\t\tmargin-bottom: 0.5rem;\n\t}\n\n\ttag-edit tag-name {\n\t\tfont-size: 0.9rem;\n\t}\n\n\ttag-edit textarea {\n\t\tmin-height: 0px;\n\t\toverflow-y: hidden;\n\t\ttransition: min-height 300ms ease-in-out;\n\t\tresize: none;\n\t}\n\n\ttag-edit input::placeholder {\n\t\tcolor: #aaa;\n\t}\n\n\t/* tag-edit::after {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\tbackground: linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(255, 255, 255, 0.25) 50%, rgba(0, 0, 0, 0) 100%);\n\t\theight: 3px;\n\t\twidth: calc(100% - 2rem);\n\t} */\n</style>\n",
    "<tag-edit-separator />\n\n<style>\n\ttag-edit-separator {\n\t\tdisplay: block;\n\t\tbackground: linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(255, 255, 255, 0.25) 50%, rgba(0, 0, 0, 0) 100%);\n\t\theight: 3px;\n\t\twidth: calc(100% - 2rem);\n\t}\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\nimport Album from '../components/Album.svelte';\nimport { albumArtSizeConfig } from '../store/config.store';\nimport { albumListStore, selectedGroupByStore, selectedGroupByValueStore } from '../store/final.store';\n// If the album art size has been set in the store.\n$: if ($albumArtSizeConfig)\n    document.documentElement.style.setProperty('--cover-dimension', `${$albumArtSizeConfig}px`);\n// $:console.log($albumListStore)\n// import { getAlbumsIPC } from '../service/ipc.service'\n// $: if ($storeConfig !== undefined) {\n// \tlet dimension\n// \ttry {\n// \t\tdimension = $storeConfig['art']['dimension']\n// \t} catch (error) {\n// \t\tdimension = 128\n// \t} finally {\n// \t\tdocument.documentElement.style.setProperty('--cover-dimension', `${dimension}px`)\n// \t}\n// }\n// $: {\n// \tlet groupOnlyByFolder = $storeConfig?.userOptions?.groupOnlyByFolder\n// \tif (groupOnlyByFolder!==undefined) {\n// \t\tfetchSongs(groupOnlyByFolder)\n// \t}\n// }\n// IMPORTANT: Create symlinks between config types and create somehow a script to create them.\nonMount(() => {\n    // Whenever a filter is selected resets the scroll to top. Can't do it in reactive statement because querySelector gives undefined.\n    selectedGroupByStore.subscribe(() => {\n        document.querySelector('art-grid-svlt').scrollTop = 0;\n    });\n    selectedGroupByValueStore.subscribe(() => {\n        document.querySelector('art-grid-svlt').scrollTop = 0;\n    });\n});\n</script>\n\n<art-grid-svlt>\n\t{#each $albumListStore as album, index (album['ID'])}\n\t\t<Album {album} {index} />\n\t{/each}\n</art-grid-svlt>\n\n<style>\n\tart-grid-svlt {\n\t\t/* justify-content: space-evenly; */\n\t\tpadding: 1rem;\n\t\t/* justify-content: space-evenly; */\n\t\t/* padding: 1rem; */\n\t\t/* padding: var(--art-grid-gap); */\n\t\t/* border-bottom: 1rem solid transparent; */\n\t\t/* border-bottom: var(--art-grid-gap) solid transparent; */\n\t\toverflow-y: auto;\n\t\toverflow-x: hidden;\n\t\theight: 100%;\n\t\tgrid-area: art-grid-svlt;\n\t\tbackground-color: rgba(0, 0, 0, 0.3);\n\t\tborder-right: 10px transparent solid;\n\t\t/* display: grid;\n\t\tgrid-template-columns: repeat(auto-fit, var(--cover-dimension));\n\t\tgrid-template-rows: repeat(auto-fit, var(--cover-dimension));\n\t\tgap: var(--art-grid-gap); */\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n</style>\n",
    "<img src=\"./img/bg.jpg\" alt=\"\">\n\n<style>\n  img{\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n</style>",
    "<script lang=\"ts\">import { getGroupingIPC } from '../service/ipc.service';\nimport { albumPlayingIdStore, dbVersion, selectedGroupByStore, selectedGroupByValueStore } from '../store/final.store';\nlet selectedGroupBy = localStorage.getItem('GroupBy');\nlet selectedGroupByValue = localStorage.getItem('GroupByValue');\n// let selection = selectedGroupByValue\nlet groups = [];\nlet firstSelectedGroupByAssign = true;\nlet firstSelectedGroupByValueAssign = true;\nlet firstDbVersionAssign = true;\n$: {\n    $dbVersion;\n    if (firstDbVersionAssign === true) {\n        firstDbVersionAssign = false;\n    }\n    else {\n        getGrouping();\n    }\n}\n$: {\n    $albumPlayingIdStore;\n    saveCurrentPlayingGroup();\n}\n$: {\n    // Get Art Grid Albums as soon as the variable is set.\n    //TODO Save to config file\n    $selectedGroupByValueStore = selectedGroupByValue;\n}\n$: {\n    selectedGroupBy;\n    if (firstSelectedGroupByAssign === true) {\n        firstSelectedGroupByAssign = false;\n        // Get Grouping as soon as the variable is set.\n        getGrouping();\n        $selectedGroupByStore = selectedGroupBy;\n    }\n    else {\n        if (selectedGroupBy !== localStorage.getItem('GroupBy')) {\n            // Get Grouping if grouping is changed.\n            getGrouping();\n            $selectedGroupByStore = selectedGroupBy;\n            localStorage.setItem('GroupBy', selectedGroupBy);\n            //TODO Save to config file\n        }\n    }\n}\nfunction getGrouping() {\n    getGroupingIPC(selectedGroupBy).then((result) => {\n        groups = result;\n        setTimeout(() => {\n            try {\n                let inputRadioValue = document\n                    .querySelector('grouping-svlt groups')\n                    .querySelector(\"input[type='radio']:checked\")\n                    .getAttribute('value');\n                document.querySelector(`group[name=${inputRadioValue}]`).scrollIntoView({ block: 'center' });\n            }\n            catch (_a) { }\n        }, 100);\n    });\n}\nfunction saveCurrentPlayingGroup() {\n    localStorage.setItem('GroupByValue', selectedGroupByValue);\n}\n</script>\n\n<grouping-svlt>\n\t<select bind:value={selectedGroupBy}>\n\t\t<option value=\"null\" disabled selected>Group by...</option>\n\t\t<option value=\"none\">None</option>\n\t\t<option value=\"Genre\">Genre</option>\n\t\t<option value=\"AlbumArtist\">Album Artist</option>\n\t\t<option value=\"Album\">Album</option>\n\t\t<option value=\"Composer\">Composer</option>\n\t</select>\n\n\t<total-groups>Total {selectedGroupBy}: {groups.length}</total-groups>\n\n\t<groups>\n\t\t{#each groups as group (group.id)}\n\t\t\t<group name={group.name}>\n\t\t\t\t<input id={group.id} type=\"radio\" value={group.name} bind:group={selectedGroupByValue} />\n\t\t\t\t<label for={group.id}>{group.name}</label>\n\t\t\t</group>\n\t\t{/each}\n\t</groups>\n</grouping-svlt>\n\n<style>\n\tgrouping-svlt {\n\t\t--highlight-color: rgba(255, 255, 255, 0.25);\n\n\t\tgrid-area: grouping-svlt;\n\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\theight: 100%;\n\t}\n\n\tgrouping-svlt select {\n\t\tdisplay: block;\n\t\tpadding: 0.5rem 1rem;\n\t\tfont-size: 1rem;\n\t\tfont-family: inherit;\n\t\tbackground-color: rgba(255, 255, 255, 0.05);\n\t\tcolor: #fff;\n\t\tborder: none;\n\t\toutline: none;\n\t\tcursor: pointer;\n\t\twidth: 100%;\n\t}\n\n\tgrouping-svlt total-groups {\n\t\ttext-align: center;\n\t\tpadding: 0.5rem;\n\t\tmargin: 0.5rem;\n\t\tborder-radius: 5px;\n\t\tfont-size: 0.85rem;\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t}\n\n\tgroups {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\toverflow-y: auto;\n\t\theight: 100%;\n\t\tpadding: 0 0.5rem;\n\t\tfont-size: 0.85rem;\n\t}\n\n\tgroups group {\n\t\twidth: 192px;\n\t\tmargin: 0.25rem 0;\n\t}\n\n\tgroups group label {\n\t\tpadding: 0.5rem;\n\t\tborder-radius: 5px;\n\t\tcursor: pointer;\n\t\tdisplay: block;\n\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t}\n\n\tgroups group:hover label {\n\t\tbackground-color: var(--highlight-color);\n\t}\n\n\tgroups group label {\n\t\tuser-select: none;\n\t}\n\n\tgroups group input[type='radio'] {\n\t\tdisplay: none;\n\t}\n\n\tgroups group input[type='radio'] + label::before {\n\t\tcontent: '●';\n\t\tmargin-right: 10px;\n\t\topacity: 0;\n\n\t\ttransition: opacity 300ms ease-in-out;\n\t}\n\tgroups group input[type='radio']:checked + label {\n\t\tbackground-color: var(--highlight-color);\n\t}\n\n\tgroups group input[type='radio']:checked + label::before {\n\t\tcontent: '●';\n\t\topacity: 1;\n\t}\n</style>\n",
    "<navigation-svlt>\n\t<h1>N</h1>\n</navigation-svlt>\n\n<style>\n\tnavigation-svlt {\n    grid-area: navigation-svlt;\n\t\t/* background-color: rgba(255,255,255,.05); */\n\t}\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n;\nimport { onMount } from 'svelte';\nimport NextButton from '../components/NextButton.svelte';\nimport PreviousButton from '../components/PreviousButton.svelte';\nimport PlayButton from '../components/PlayButton.svelte';\nimport PlayerProgress from '../components/PlayerProgress.svelte';\nimport PlayerVolumeBar from '../components/PlayerVolumeBar.svelte';\nimport { isPlaying } from '../store/final.store';\nimport { getWaveformIPCData } from '../service/waveform.service';\nimport { nextSong } from '../functions/nextSong.fn';\nimport { escapeString } from '../functions/escapeString.fn';\nimport { albumPlayingIdStore, playbackCursor, playbackStore } from '../store/final.store';\nlet progress = 0;\nlet currentSong = undefined;\nlet nextSongPreloaded = undefined;\nlet player = undefined;\nlet playingInterval = undefined;\nlet firstPlaybackCursorAssign = true;\n$: {\n    if (firstPlaybackCursorAssign === true) {\n        firstPlaybackCursorAssign = false;\n    }\n    else {\n        // resetProgress()\n        playSong($playbackCursor);\n    }\n}\nlet preLoadNextSongDebounce = undefined;\nfunction playSong(playbackCursor) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let indexToPlay = playbackCursor[0];\n        let doPlayNow = playbackCursor[1];\n        let songs = $playbackStore;\n        let songToPlay = songs[indexToPlay];\n        let url = undefined;\n        if ((songToPlay === null || songToPlay === void 0 ? void 0 : songToPlay.ID) === (nextSongPreloaded === null || nextSongPreloaded === void 0 ? void 0 : nextSongPreloaded.ID)) {\n            url = nextSongPreloaded.BufferUrl;\n        }\n        else if (songToPlay === null || songToPlay === void 0 ? void 0 : songToPlay.ID) {\n            let songBuffer = yield fetchSong(escapeString(songToPlay['SourceFile']));\n            url = getUrlFromBuffer(songBuffer);\n        }\n        else {\n            player.pause();\n            player.src = '';\n            $isPlaying = false;\n            return;\n        }\n        player.src = url;\n        currentSong = songToPlay;\n        if (doPlayNow === true) {\n            player\n                .play()\n                .then(() => {\n                localStorage.setItem('LastPlayedAlbumID', $albumPlayingIdStore);\n                localStorage.setItem('LastPlayedSongID', String(songToPlay.ID));\n                localStorage.setItem('LastPlayedSongIndex', String(indexToPlay));\n                clearTimeout(preLoadNextSongDebounce);\n                preLoadNextSongDebounce = setTimeout(() => {\n                    preLoadNextSong(playbackCursor);\n                }, 500);\n            })\n                .catch((err) => { });\n        }\n        else {\n            player.pause();\n        }\n    });\n}\nfunction preLoadNextSong(playbackCursor) {\n    let nextSong = playbackCursor[0] + 1;\n    let songs = $playbackStore;\n    let songToPlay = songs[nextSong];\n    if (songToPlay) {\n        fetchSong(escapeString(songToPlay['SourceFile'])).then((buffer) => {\n            nextSongPreloaded = {\n                ID: songToPlay.ID,\n                BufferUrl: getUrlFromBuffer(buffer)\n            };\n        });\n    }\n}\nfunction getUrlFromBuffer(targetBuffer) {\n    return window.URL.createObjectURL(new Blob([targetBuffer]));\n}\nfunction resetProgress() {\n    let playerForeground = document.querySelector('player-progress progress-foreground');\n    if (playerForeground) {\n        playerForeground.classList.add('not-smooth');\n        document.documentElement.style.setProperty('--song-time', `0%`);\n        setTimeout(() => {\n            playerForeground.classList.remove('not-smooth');\n        }, 1000);\n    }\n}\nonMount(() => {\n    player = document.querySelector('audio');\n});\nfunction stopPlayer() {\n    player.removeAttribute('src');\n    player.pause();\n    document.documentElement.style.setProperty('--song-time', `0%`);\n    $isPlaying = false;\n    return;\n}\nfunction fetchSong(songPath) {\n    return new Promise((resolve, reject) => {\n        fetch(songPath)\n            .then((data) => data.arrayBuffer())\n            .then((arrayBuffer) => {\n            resolve(arrayBuffer);\n        })\n            .catch((err) => {\n            //TODO Alert user that song is not found and offer a way to remove from DB.\n            console.log('OOPS', err);\n        });\n    });\n}\nfunction startInterval() {\n    $isPlaying = true;\n    clearInterval(playingInterval);\n    playingInterval = setInterval(() => {\n        // Rounds to 2 decimals.\n        progress = Math.round(((100 / currentSong['Duration']) * player.currentTime + Number.EPSILON) * 100) / 100;\n        document.documentElement.style.setProperty('--song-time', `${progress}%`);\n    }, 100);\n}\nfunction stopInterval() {\n    // console.log('Stop')\n    $isPlaying = false;\n    clearInterval(playingInterval);\n}\n</script>\n\n<player-svlt>\n\t<audio controls={true} on:play={() => startInterval()} on:pause={() => stopInterval()} on:ended={() => nextSong()}>\n\t\t<track kind=\"captions\" />\n\t</audio>\n\n\t<player-buttons>\n\t\t<PreviousButton {player} />\n\t\t<PlayButton {player} />\n\t\t<NextButton />\n\t</player-buttons>\n\n\t<PlayerVolumeBar {player} />\n\n\t<PlayerProgress {player} song={currentSong} />\n</player-svlt>\n\n<style>\n\tplayer-svlt {\n\t\tgrid-area: player-svlt;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground-color: var(--high-color);\n\n\t\ttransition: background-color 300ms ease-in-out;\n\t}\n\n\taudio {\n\t\tdisplay: none;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\tplayer-buttons {\n\t\theight: var(--button-size);\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\t:global(player-buttons > *) {\n\t\tcursor: pointer;\n\t\tmargin: 0 0.75rem;\n\t}\n</style>\n",
    "<script lang=\"ts\">import SongListItem from '../components/SongListItem.svelte';\nimport { scrollSongListToTop } from '../functions/scrollSongListToTop.fn';\nimport { selectedAlbumId, songListStore, selectedSongsStore } from '../store/final.store';\nlet isSelectedAlbumIdFirstAssign = true;\n$: {\n    $selectedAlbumId;\n    if (isSelectedAlbumIdFirstAssign) {\n        isSelectedAlbumIdFirstAssign = false;\n    }\n    else {\n        scrollSongListToTop();\n    }\n}\nlet lastSelectedSong = 0;\nfunction selectSongs(e) {\n    let { ctrlKey, metaKey, shiftKey } = e;\n    e['path'].forEach((element) => {\n        if (element.tagName === 'SONG-LIST-ITEM') {\n            let id = Number(element.getAttribute('id'));\n            let currentSelectedSong = Number(element.getAttribute('index'));\n            if (ctrlKey === false && metaKey === false && shiftKey === false) {\n                $selectedSongsStore = [id];\n            }\n            if (shiftKey === false && (ctrlKey === true || metaKey === true)) {\n                if (!$selectedSongsStore.includes(id)) {\n                    $selectedSongsStore.push(id);\n                }\n                else {\n                    $selectedSongsStore.splice($selectedSongsStore.indexOf(id), 1);\n                }\n            }\n            if (shiftKey === true && ctrlKey === false && metaKey === false) {\n                for (let i = currentSelectedSong; i !== lastSelectedSong; currentSelectedSong < lastSelectedSong ? i++ : i--) {\n                    let currentID = $songListStore[i].ID;\n                    if (!$selectedSongsStore.find((i) => i === currentID)) {\n                        $selectedSongsStore.push(currentID);\n                    }\n                }\n            }\n            lastSelectedSong = currentSelectedSong;\n            $selectedSongsStore = $selectedSongsStore;\n        }\n    });\n}\n</script>\n\n<song-list-svlt on:click={(e) => selectSongs(e)}>\n\t{#if $songListStore !== undefined}\n\t\t{#each $songListStore as song, index (song.ID)}\n\t\t\t<SongListItem {song} {index} />\n\t\t{/each}\n\t{/if}\n</song-list-svlt>\n\n<style>\n\tsong-list-svlt {\n\t\tborder: 10px transparent solid;\n\t\tgrid-area: song-list-svlt;\n\t\toverflow-y: auto;\n\t\theight: 100%;\n\t\tpadding-right: 10px;\n\t\t/* background-color: rgba(255,255,255,.20); */\n\t}\n</style>\n",
    "<script lang=\"ts\">import { albumCoverArtMapStore, selectedAlbumId } from '../store/final.store';\nlet previousCoverArtVersion = undefined;\nlet previousCoverArtID = undefined;\n$: {\n    // Loads cover if Cover Art map (If image updated) or Selected Album changes.\n    // Get Cover Art from Map.\n    let coverArt = $albumCoverArtMapStore.get($selectedAlbumId);\n    // If Found\n    if (coverArt) {\n        // Checks if the previous id changed.\n        if (previousCoverArtID !== $selectedAlbumId) {\n            // If changed it updates both id and version.\n            previousCoverArtID = $selectedAlbumId;\n            previousCoverArtVersion = coverArt.version;\n            // If a cover is available, load it.\n            loadCover(coverArt.filePath);\n            // Checks if a new version of the album cover is available\n        }\n        else if (coverArt.version !== previousCoverArtVersion) {\n            // Updates the cover version.\n            previousCoverArtVersion = coverArt.version;\n            loadCover(coverArt.filePath);\n        }\n    }\n}\n// Takes a file path and loads it to the bg image style property.\nfunction loadCover(coverArtPath) {\n    if (coverArtPath) {\n        let $el = document.querySelector('song-list-background-svlt');\n        if ($el) {\n            $el.setAttribute('style', `background-image: url('${coverArtPath}');`);\n        }\n    }\n}\n</script>\n\n<song-list-background-svlt />\n\n<style>\n\tsong-list-background-svlt {\n\t\tgrid-area: song-list-svlt;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpointer-events: none;\n\n\t\t/* background-image: url('/Users/fran/Library/Application Support/Jahmin/art/192/dn8dyp.webp'); */\n\t\t/* background-size: cover; */\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-size: 100% 100%;\n\t\tz-index: -1;\n\n\t\ttransition: background-image 300ms;\n\t}\n\n\tsong-list-background-svlt::before {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: rgba(0, 0, 0, 0.33);\n\t\tbackdrop-filter: blur(100px);\n\t\t/* z-index: 1; */\n\t}\n</style>\n",
    "<script lang=\"ts\">import TagEditEditor from '../components/TagEdit-Editor.svelte';\nimport TagEditSeparator from '../components/TagEdit-Separator.svelte';\n;\n;\nimport { selectedAlbumId, selectedSongsStore } from '../store/final.store';\nimport { getAlbumIPC } from '../service/ipc.service';\nlet isSelectedSongsFirstAssign = true;\nlet songList = [];\nlet tagGroupDetail = undefined;\nlet newTags = {\n    Album: undefined,\n    AlbumArtist: undefined,\n    Artist: undefined,\n    Comment: undefined,\n    Composer: undefined,\n    Date_Year: undefined,\n    Date_Month: undefined,\n    Date_Day: undefined,\n    Genre: undefined,\n    Rating: undefined,\n    Title: undefined,\n    Track: undefined\n};\n$: {\n    newTags;\n    cleanObject();\n}\n$: {\n    $selectedAlbumId;\n    $selectedSongsStore;\n    if (isSelectedSongsFirstAssign === true) {\n        isSelectedSongsFirstAssign = false;\n    }\n    else {\n        checkSongs();\n    }\n}\nfunction cleanObject() {\n    let tagsToUpdate = {};\n    for (let tag in tagGroupDetail) {\n        if (tagGroupDetail[tag] !== newTags[tag]) {\n            tagsToUpdate[tag] = newTags[tag];\n        }\n    }\n    // console.log(tagsToUpdate)\n}\nlet previousSongList = undefined;\n// Check either Selected Songs (if any selected) or Selected Album (if no songs selected). Then, calls group songs\nfunction checkSongs() {\n    getAlbumIPC($selectedAlbumId).then((result) => {\n        // console.log(result)\n        // If songs selected\n        if ($selectedSongsStore.length > 0) {\n            songList = result.Songs.filter((song) => $selectedSongsStore.includes(song.ID));\n            // Check if song list changed.\n            if (JSON.stringify(previousSongList) !== JSON.stringify(songList)) {\n                groupSongs();\n                previousSongList = [...songList];\n            }\n        }\n        else {\n            songList = result.Songs;\n            // Check if song list changed.\n            if (JSON.stringify(previousSongList) !== JSON.stringify(songList)) {\n                groupSongs();\n                previousSongList = [...songList];\n            }\n        }\n    });\n}\nfunction groupSongs() {\n    let tagGroup = {\n        Album: undefined,\n        AlbumArtist: undefined,\n        Artist: undefined,\n        Comment: undefined,\n        Composer: undefined,\n        Genre: undefined,\n        Rating: undefined,\n        Title: undefined,\n        Track: undefined,\n        Date_Year: undefined,\n        Date_Month: undefined,\n        Date_Day: undefined\n    };\n    // Goes through every song and checks every tag from tag group.\n    for (let song of songList) {\n        for (let tag in tagGroup) {\n            // console.log(tagGroup[tag], song[tag], tagGroup[tag] !== song[tag])\n            if (tagGroup[tag] === undefined) {\n                tagGroup[tag] = song[tag];\n                // If does not match previously set value.\n            }\n            else if (tagGroup[tag] !== song[tag]) {\n                tagGroup[tag] = '(Multiple Values)';\n            }\n        }\n    }\n    // console.log(tagGroup)\n    tagGroupDetail = Object.assign({}, tagGroup);\n    newTags = Object.assign({}, tagGroupDetail);\n}\n</script>\n\n<tag-edit-svlt>\n\t<component-name>Tag Edit</component-name>\n\n\t<TagEditEditor tagName=\"Title\" type=\"input\" bind:value={newTags.Title} />\n\t<TagEditEditor tagName=\"Album\" type=\"input\" bind:value={newTags.Album} />\n\t<TagEditEditor tagName=\"Artist\" type=\"textarea\" bind:value={newTags.Artist} />\n\t<TagEditEditor tagName=\"Album Artist\" type=\"textarea\" bind:value={newTags.AlbumArtist} />\n\t<TagEditEditor tagName=\"Genre\" type=\"input\" bind:value={newTags.Genre} />\n\t<TagEditEditor tagName=\"Composer\" type=\"input\" bind:value={newTags.Composer} />\n\t<TagEditEditor tagName=\"Comment\" type=\"textarea\" bind:value={newTags.Comment} />\n\n\t<date-tag-editor>\n\t\t<TagEditEditor tagName=\"Year\" type=\"number\" bind:value={newTags.Date_Year} />\n\t\t<TagEditEditor tagName=\"Month\" type=\"number\" bind:value={newTags.Date_Month} />\n\t\t<TagEditEditor tagName=\"Day\" type=\"number\" bind:value={newTags.Date_Day} />\n\t</date-tag-editor>\n</tag-edit-svlt>\n\n<style>\n\tdate-tag-editor {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3,1fr);\n\t}\n\n\ttag-edit-svlt {\n\t\tgrid-area: tag-edit-svlt;\n\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\tbackground-color: rgba(0, 0, 0, 0.25);\n\t}\n\n\tcomponent-name {\n\t\ttext-align: center;\n\t\tpadding: 0.5rem;\n\t\tbackground-color: rgba(255, 255, 255, 0.05);\n\t\tmargin-bottom: 0.5rem;\n\t\t/* font-size: .9rem; */\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}